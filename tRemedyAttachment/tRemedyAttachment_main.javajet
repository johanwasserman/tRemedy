<%@ jet 
  imports="
      java.util.List
      java.util.Map
      org.talend.core.model.metadata.IMetadataColumn
      org.talend.core.model.metadata.IMetadataTable
      org.talend.core.model.process.EConnectionType
      org.talend.core.model.process.ElementParameterParser
      org.talend.core.model.process.IConnection
      org.talend.core.model.process.IConnectionCategory
      org.talend.core.model.process.INode
      org.talend.designer.codegen.config.CodeGeneratorArgument
      org.talend.core.model.metadata.types.JavaTypesManager
  "
%>
<%
CodeGeneratorArgument codeGenArgument = (CodeGeneratorArgument) argument;
INode node = (INode)codeGenArgument.getArgument();
String cid = node.getUniqueName();

String process = ElementParameterParser.getValue(node, "__PROCESS__");
String down_uid = ElementParameterParser.getValue(node, "__DOWN_ID_FIELD__");
String directory = ((String)ElementParameterParser.getValue(node, "__TEMPORARY_DATA_DIRECTORY__")).replaceAll("\\\\", "/");
boolean bDieOnError = "true".equals(ElementParameterParser.getValue(node, "__DIEONERROR__"));
boolean deleteOriginal = "true".equals(ElementParameterParser.getValue(node, "__DELETE_ORIGINAL__"));

List<Map<String, String>> uploadtable = (List<Map<String,String>>)ElementParameterParser.getObjectValue(node, "__UP_LOOKUP_COLS__");
List<Map<String, String>> downloadtable = (List<Map<String,String>>)ElementParameterParser.getObjectValue(node, "__DOWN_LOOKUP_COLS__");

String connName = null;
String rejectName = null;
String outConnName = null;

if (node.getIncomingConnections().size() == 1) { //+1
	IConnection conn = node.getIncomingConnections().get(0);
	connName = conn.getName();
}//-1
List<IMetadataTable> metadatas = node.getMetadataList();

boolean isLog4jEnabled = false;
%>
int nb_line_<%=cid%> = 0;
int nb_line_ok_<%=cid%> = 0;
int nb_line_reject_<%=cid%> = 0;
<%
if ((metadatas != null) && (metadatas.size() > 0)) {//if metadatas
	IMetadataTable metadata = metadatas.get(0);

	if (metadata!=null && connName != null) {//if connName
		List<? extends IConnection> conns = node.getOutgoingSortedConnections();
		List<? extends IConnection> connsReject = node.getOutgoingConnections("REJECT");
		
		
		isLog4jEnabled = ("true").equals(ElementParameterParser.getValue(node.getProcess(), "__LOG4J_ACTIVATE__"));

		if (conns != null && conns.size() > 0) {//if conns
			IConnection conn = conns.get(0);
			outConnName = conn.getName();
%>
			if (<%=outConnName%> == null) {
				<%=outConnName%> = new <%=outConnName%>Struct();
			}
<%
    	}//if conns

		if (connsReject != null && connsReject.size() > 0) {//Failed
			for (IConnection conn : connsReject) {//for connsReject
				if (conn.getLineStyle().hasConnectionCategory(IConnectionCategory.DATA)) {//if linestyle
					rejectName = conn.getName();
%>
					if (<%=rejectName%> == null) {
						<%=rejectName%> = new <%=rejectName%>Struct();
					}
<%
					
				}
			}
		}
%>
		boolean hasError_<%=cid%> = false;
		String errorMessage_<%=cid%> = "";
		nb_line_<%=cid%> ++;
		try {
<%
			for (IMetadataColumn column: metadata.getListColumns()) {//for columns
				String label = column.getLabel();
				String javaType = JavaTypesManager.getTypeToGenerate(column.getTalendType(), column.isNullable());
				javaType = javaType.contains(".") ? javaType.substring(javaType.lastIndexOf(".") + 1) : javaType;
				String patternValue = column.getPattern() == null || column.getPattern().trim().length() == 0 ? null : column.getPattern();
%>
				try {
<%
					String newLabel = null;
					if (process.equals("ATT_UPLOAD")) { //if upload
						for (Map<String, String> uploadcolumn : uploadtable){ //for uploadtable
							String upload = uploadcolumn.get("INPUT_COLUMN");
							String source = ((String)uploadcolumn.get("SOURCE_COLUMN")).replaceAll("\\\\","/");
							IMetadataColumn up = metadata.getColumn(upload);
							newLabel = up.getLabel();
							if (label.equals(newLabel)) { // if outLabel
%>
								String file_<%=cid %> = "";
								String stub_<%=cid %> = "";
								if( <%=source%> != null && !"".equals(<%=source%>) ){
									if ( <%=source%>.contains("/") ) {
										String [] src_<%=cid %> = <%=source%>.split("/");
										file_<%=cid %> = src_<%=cid %>[src_<%=cid %>.length-1];
										for (int i=0; i<src_<%=cid %>.length-1; i++) {
											stub_<%=cid %> += "/" + src_<%=cid %>[i];
										}
									} else {
										file_<%=cid %> = <%=source%>;
									}
								}
<%
								if ("Object".equals(javaType)) {
%>
									if (file_<%=cid %>!=null && !"".equals(file_<%=cid %>)) {
										<%=outConnName %>.<%=label%> = new com.bmc.arsys.api.AttachmentValue(file_<%=cid %>, <%=directory%>+stub_<%=cid %>+"/"+file_<%=cid %>);
									}
<%
								} else {
%>
									hasError_<%=cid%> = true;
									if (("").equals(errorMessage_<%=cid %>)){
										errorMessage_<%=cid %> = "[<%=outConnName %>.<%=label%>] field JavaType is <%=javaType%> : Cannot save Object";
									} else {
										errorMessage_<%=cid %> = errorMessage_<%=cid %> + "; " + "[<%=outConnName %>.<%=label%>] field JavaType is <%=javaType%> : Cannot save Object";
									}
<%
								}
								if (deleteOriginal) {
%>
									if (file_<%=cid %>!=null && !"".equals(file_<%=cid %>)) {
										java.io.File f_<%=cid %> = new java.io.File(file_<%=cid %>);
										if (f_<%=cid %>.exists()) {
											f_<%=cid %>.delete();
										}
									}
									if (stub_<%=cid %>!=null && !"".equals(stub_<%=cid %>)) {
										String [] dlist_<%=cid %> = stub_<%=cid %>.split("/");
										for (int i=dlist_<%=cid %>.length-1; i>=0; i--) {
											if (dlist_<%=cid %>[i] != null && !"".equals(dlist_<%=cid %>[i])) {
												java.io.File d_<%=cid %> = new java.io.File(<%=directory %>+"/"+dlist_<%=cid %>[i]);
												if(d_<%=cid %>.exists() && d_<%=cid %>.list().length==0){
													d_<%=cid %>.delete();
												}
											}
										}
									}
<%
								}
							} else {
								if (rejectName != null) {
%>
									<%=rejectName%>.<%=label%> = <%=connName%>.<%=label%>;
<%
								}
%>
								<%=outConnName %>.<%=label%> = <%=connName%>.<%=label%>;
<%
							} // if outLabel
						} // for uploadtable
					} else	if (process.equals("ATT_DOWNLOAD")) { //if dowload
						for (Map<String, String> downloadcolumn : downloadtable){ // for downloadtable
							String download = downloadcolumn.get("INPUT_COLUMN");
							String target = downloadcolumn.get("OUTPUT_COLUMN");
							IMetadataColumn down = metadata.getColumn(download);
							IMetadataColumn up = metadata.getColumn(target);
							if (label.equals(down.getLabel())) {
%>
								com.bmc.arsys.api.AttachmentValue attach_<%=cid%> = (com.bmc.arsys.api.AttachmentValue)<%=connName%>.<%=down.getLabel()%>;
								String filename_<%=cid %> = ((String)attach_<%=cid%>.getValueFileName()).replaceAll("\\\\", "/");

								if ( filename_<%=cid %>.contains("/") ) {
									String [] fn_<%=cid %> = filename_<%=cid %>.split("/");
									filename_<%=cid %> = fn_<%=cid %>[fn_<%=cid %>.length-1];
								}

								java.io.File f_<%=cid%> = new java.io.File(<%=directory%>+"/"+<%=connName%>.<%=down_uid%>);
								f_<%=cid%>.mkdirs();
								String attachment_<%=cid%> = <%=directory%>+"/"+<%=connName%>.<%=down_uid%>+"/"+filename_<%=cid %>;
								java.io.FileOutputStream fos_<%=cid%> = new java.io.FileOutputStream(attachment_<%=cid%>);
								fos_<%=cid%>.write(attach_<%=cid%>.getContent());
								fos_<%=cid%>.close();
								attach_<%=cid%> = null;
								
								<%=connName%>.<%=down.getLabel()%> = null;
								<%=outConnName %>.<%=up.getLabel()%> = attachment_<%=cid%>;
<%
							} else if (!label.equals(up.getLabel())) {
%>
								<%=outConnName %>.<%=label%> = <%=connName%>.<%=label%>;
<%
								if (rejectName != null) {
%>
									<%=rejectName%>.<%=label%> = <%=connName%>.<%=label%>;
<%
								}
							}
						} // for downloadtable
					} //if up/download
%>
				} catch (Exception e) {
					hasError_<%=cid%> = true;
					if (("").equals(errorMessage_<%=cid %>)){
						errorMessage_<%=cid %> = "[<%=label %>: " + <%=connName%>.<%=label%> + "] " + e.getMessage();
					} else {
						errorMessage_<%=cid %> = errorMessage_<%=cid %> + "; " + "[<%=label %>: " + <%=connName%>.<%=label%> + "] " + e.getMessage();
					}
				}
<%
			}//for columns
%>
		} catch (Exception e) {
			hasError_<%=cid%> = true;
			if (("").equals(errorMessage_<%=cid %>)){
				errorMessage_<%=cid %> = "[Attachment Procesing Failed] " + e.getMessage();
			} else {
				errorMessage_<%=cid %> = errorMessage_<%=cid %> + ";" + "SEVERE - [Attachment Procesing Failed] " + e.getMessage();
			}
		}
		if (hasError_<%=cid%>) {
			nb_line_reject_<%=cid%> ++;
<%
			if (rejectName != null) {
%>
				<%=rejectName %>.ETL_ATTACH_ERR = "Line: " + (tos_count_<%=node.getUniqueName() %>+1) + "|" + errorMessage_<%=cid %>;
<%
			}
%>
			<%=outConnName %> = null;
		} else{
<%
			if (rejectName != null) {
%>
				<%=rejectName %> = null;
<%
			}
%>
			nb_line_ok_<%=cid%> ++;
		}
		errorMessage_<%=cid %> = "";
		hasError_<%=cid%> = false;
<%
	} //if connName
} //if metadatas
%>